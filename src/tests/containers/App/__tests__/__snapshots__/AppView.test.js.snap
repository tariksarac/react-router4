// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render App without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <withRouter(Connect(Header)) />
    <Switch>
        <Route
            component={[Function]}
            exact={true}
            path="/"
        />
        <Route
            component={[Function]}
            path="/auth"
        />
        <PrivateRoute
            auth={undefined}
            component={[Function]}
            path="/protected"
        />
        <Route
            component={[Function]}
        />
    </Switch>
</div>,
  "nodes": Array [
    <div>
      <withRouter(Connect(Header)) />
      <Switch>
            <Route
                  component={[Function]}
                  exact={true}
                  path="/"
            />
            <Route
                  component={[Function]}
                  path="/auth"
            />
            <PrivateRoute
                  auth={undefined}
                  component={[Function]}
                  path="/protected"
            />
            <Route
                  component={[Function]}
            />
      </Switch>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <App />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": App {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <withRouter(Connect(Header)) />
          <Switch>
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/"
                    />
                    <Route
                              component={[Function]}
                              path="/auth"
                    />
                    <PrivateRoute
                              auth={undefined}
                              component={[Function]}
                              path="/protected"
                    />
                    <Route
                              component={[Function]}
                    />
          </Switch>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <withRouter(Connect(Header)) />
          <Switch>
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/"
                    />
                    <Route
                              component={[Function]}
                              path="/auth"
                    />
                    <PrivateRoute
                              auth={undefined}
                              component={[Function]}
                              path="/protected"
                    />
                    <Route
                              component={[Function]}
                    />
          </Switch>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App />,
}
`;
